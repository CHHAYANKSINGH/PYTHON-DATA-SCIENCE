What is the difference between a Python tuple and Python list?
    Lists are mutable and tuples are not mutable
Which of the following methods work both in Python lists and Python tuples?
    index()
What will end up in the variable y after this code is executed? x , y = 3, 4
    4
In the following Python code, what will end up in the variable y? x = { 'chuck' : 1 , 'fred' : 42, 'jan': 100}; y = x.items()
    A list of tuples
Which of the following tuples is greater than x in the following Python sequence? x = (5, 1, 3); if ??? > x : ...
    (6, 0, 0)
What does the following Python code accomplish, assuming the c is a non-empty dictionary? tmp = list(); for k, v in c.items(): tmp.append( (v, k))
    It creates a list of tuples where each tuple is a value, key pair
If the variable data is a Python list, how do we sort it in reverse order?
    data.sort(reverse=True)
Using the following tuple, how would you print 'Wed'? days = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')
    print( days[2])
In the following Python loop, why are there two iteration variables (k and v)? c = {'a':10, 'b':1, 'c':22}; for k, v in c.items() : ...
    Because the items() method in dictionaries returns a list of tuples
Given that Python lists and Python tuples are quite similar - when might you prefer to use a tuple over a list?
    For a temporary variable that you will use and discard without modifying
    
    ****************************************************************************
    ASSIGNMENT 10.2
    
    10.2 Write a program to read through the mbox-short.txt and
figure out the distribution by hour of the day for each of the messages.
You can pull the hour out from the 'From ' line by finding the time
and then splitting the string a second time using a colon.
From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008
Once you have accumulated the counts for each hour, print out the counts,
sorted by hour as shown below. Note that the autograder
does not have support for the sorted() function.

name = input("Enter file:")
if len(name) < 1 : name = "mbox-short.txt"
handle = open(name)

hcount = dict()                                     #create empty dictionary
hlst = []                                           #create empty list

for line in handle: 
    words = line.split()
    if len(words) > 2 and words[0] == 'From':       #Select lines with 'From'
        hr = words[5].split(':')                    #Select hour (5th index) and split string with colon
        hcount[hr[0]] = hcount.get(hr[0], 0) + 1    #increase count for each hour
    else:
        continue

for k,v in hcount.items():                           #k = hour, v = count
    hlst.append((k,v))                               #append tuples to list

hlst.sort()                                         #sort list by hour
for k,v in hlst:                                    #loop through list of tuples
    print(k,v)
